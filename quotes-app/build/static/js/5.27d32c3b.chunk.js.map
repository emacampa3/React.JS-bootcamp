{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","IsSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequestFunction","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCyCSC,EAtCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,cAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAlBYV,EAkBcT,EAAMS,OAlBZC,EAkBoBK,EAjBxCN,EAAOW,MAAK,SAACC,EAAQC,GAC3B,OAAIZ,EACIW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAsBrC,OACA,eAAC,WAAD,WACC,qBAAKN,UAAWC,IAAQqB,QAAxB,SACC,yBAAQC,QAVmB,WAC7Bb,EAAQc,KAAK,CACZC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAqB,aAAe,gBAOpD,kBACOA,EAAqB,aAAe,iBAG5C,oBAAId,UAAWC,IAAQyB,KAAvB,SACER,EAAaS,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAECtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,yBC5BFuB,EAXO,WACpB,OACE,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM9B,UAAU,MAAMK,GAAG,aAAzB,6B,gBC+BS0B,UA/BG,WACjB,MAKIC,YAAQC,KAAc,GAJzBC,EADD,EACCA,oBACAC,EAFD,EAECA,OACMC,EAHP,EAGCC,KACAC,EAJD,EAICA,MAOD,OAJAC,qBAAU,WACTL,MACE,CAACA,IAEW,YAAXC,EAEF,qBAAKnC,UAAU,WAAf,SACC,cAACwC,EAAA,EAAD,MAKEF,EACK,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAIvD,cAAC,EAAD,CAAWjC,OAAQ4B,IAHhB,cAAC,EAAD","file":"static/js/5.27d32c3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import { Link } from 'react-router-dom'\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n\treturn quotes.sort((quoteA, quoteB) => {\n\t\tif (ascending) {\n\t\t\treturn quoteA.id > quoteB.id ? 1 : -1\n\t\t} else {\n\t\t\treturn quoteA.id < quoteB.id ? 1 : -1\n\t\t}\n\t})\n}\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const queryParams = new URLSearchParams(location.search)\n\n  const IsSortingAscending = queryParams.get('sort') === 'ascending'\n\n  const sortedQuotes = sortQuotes(props.quotes, IsSortingAscending)\n\n  const changeSortingHandler = () => {\n\t\thistory.push({\n\t\t\tpathname: location.pathname,\n\t\t\tsearch:`?sort=${(IsSortingAscending ? 'descending' : 'ascending')}`\n\t\t})\n  }\n\n  return (\n\t\t<Fragment>\n\t\t\t<div className={classes.sorting}>\n\t\t\t\t<button onClick={changeSortingHandler}>\n\t\t\t\t\tSort {IsSortingAscending ? 'Descending' : 'Ascending'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul className={classes.list}>\n\t\t\t\t{sortedQuotes.map((quote) => (\n\t\t\t\t\t<QuoteItem\n\t\t\t\t\t\tkey={quote.id}\n\t\t\t\t\t\tid={quote.id}\n\t\t\t\t\t\tauthor={quote.author}\n\t\t\t\t\t\ttext={quote.text}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Fragment>\n\t)\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\"\n\nimport QuoteList from \"../components/quotes/QuoteList\"\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\nimport useHttp from \"../hooks/use-http\"\nimport { getAllQuotes } from \"../lib/api\"\n\nconst AllQuotes = () => {\n\tconst {\n\t\tsendRequestFunction,\n\t\tstatus,\n\t\tdata: loadedQuotes,\n\t\terror,\n\t} = useHttp(getAllQuotes, true)\n\n\tuseEffect(() => {\n\t\tsendRequestFunction()\n\t}, [sendRequestFunction])\n\n\tif (status === \"pending\") {\n\t\treturn (\n\t\t\t<div className='centered'>\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t)\n\t}\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />\n  }\n\n\treturn <QuoteList quotes={loadedQuotes} />\n}\n\nexport default AllQuotes\n"],"sourceRoot":""}